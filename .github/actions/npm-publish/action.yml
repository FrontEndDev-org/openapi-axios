name: npm publish
description: 按仓库类型执行 npm publish，可以将包发布到 npm、github 等仓库

inputs:
  type:
    description: 仓库类型，可选 npm/github
    required: true
  token:
    description: 仓库授权令牌，如果是非 github 仓库则需要指定
    required: false

runs:
  using: composite
  steps:
    - id: pkg
      uses: jaywcjlove/github-action-package@main
    - id: naming
      shell: bash
      # originName        ->  underscoreName
      # my-pkg            ->  my-pkg
      # @my-scope/my-pkg  ->  my-scope__my-pkg
      run: |
        # 原始名称
        echo "N1=${{ steps.pkg.outputs.name }}" >> $GITHUB_ENV
        # 删除 @ 开头
        echo "N2=${$N1/@/}" >> $GITHUB_ENV
        # 将 / 替换为 __
        echo "N3=${N2/\//__}" >> $GITHUB_ENV
        echo "origin=$N1" >> "$GITHUB_OUTPUT"
        echo "underscore=$N3" >> "$GITHUB_OUTPUT"

    - name: 仓库类型是 npm
      if: inputs.type == 'npm'
      shell: bash
      run: |
        echo "//registry.npmjs.org/:_authToken=${{ inputs.token }}" > .npmrc
        echo "registry=https://registry.npmjs.org/" >> .npmrc
        echo "always-auth=true" >> .npmrc
    - shell: bash
      run: npm publish
    - name: 同步新版本到 npmmirror.com
      if: inputs.type == 'npm'
      shell: bash
      run: curl --silent -X PUT https://registry-direct.npmmirror.com/${{ steps.pkg.outputs.name }}/sync?sync_upstream=true

    - name: 仓库类型是 github
      if: inputs.type == 'github'
      shell: bash
      run: |
        echo "//npm.pkg.github.com/:_authToken=${{ github.token }}" > .npmrc
        echo "registry=https://npm.pkg.github.com/" >> .npmrc
        echo "always-auth=true" >> .npmrc
    - name: 将 package.json name 修改为符合 GitHub 要求
      if: inputs.type == 'github'
      uses: jaywcjlove/github-action-package@main
      with:
        data: |
          {
            "name": "@${{ github.repository_owner }}/${{ steps.naming.outputs.underscore }}"
          }
